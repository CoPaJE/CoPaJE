name: ci
on:
  push:
    branches:
      - master
      - main
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen gource libgs-dev pngquant libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev
          pip install git+https://${{ secrets.GH_SQUID_TOKEN }}@github.com/squidfunk/mkdocs-material-insiders.git
          pip install jinja2 Pygments mkdocs mkdocs-same-dir mkdocs-minify-plugin mkdocs-redirects mkdocs-exclude mkdocs-git-committers-plugin-2 mkdocs-git-revision-date-localized-plugin mkdocs-with-pdf pillow cairosvg mkdocs-git-authors-plugin

      - run: CI=1 mkdocs build

      - name: 'Gource Action'
        uses: nbprojekt/gource-action@v1
        with:
          gource_title: 'CoPaJE'
          logo_url: 'overrides/favicon/android-chrome-192x192.png'
          gource_resolution: '1080p'
          gource_fps: 60
          avatars_url: colaboradores
#          avatars_auto_fetch: true
          gource_seconds_per_day: 2
          gource_hide_items: mouse

      - run: cp ./gource/gource.mp4 ./site/gource.mp4

      - run: cp ./CNAME ./site/

      - run: cp ./robots.txt ./site/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          force_orphan: true

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 19.0.2
          # You can specify specifying version range for the extra plugins if you prefer.
          extra_plugins: |
            @semantic-release/changelog@6.0.2
            @semantic-release/git@10.0.1
            @semantic-release/commit-analyzer@9.0.2
            @semantic-release/github@8.0.7
            @semantic-release/npm@9.0.1
            @semantic-release/release-notes-generator@10.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: version
        id: version
        run: |
          if [[ ${{ steps.semantic.outputs.new_release_published }} == true ]]
          then     
            export version=v${{ steps.semantic.outputs.new_release_version }}
          else
            export version=`git describe --abbrev=0 --tags $tag`
          fi
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Latest pdf
        uses: ncipollo/release-action@v1
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' #|| startsWith(github.ref, 'refs/tags')
        with:
          allowUpdates: true
          artifacts: site/pdf/document.pdf
          tag: latest

      - name: Versined pdf
        uses: ncipollo/release-action@v1
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' #|| startsWith(github.ref, 'refs/tags')
        with:
          allowUpdates: true
          artifacts: site/pdf/document.pdf
          tag: ${{ steps.version.outputs.version }}
